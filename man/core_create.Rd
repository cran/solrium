% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_create.R
\name{core_create}
\alias{core_create}
\title{Create a core}
\usage{
core_create(
  conn,
  name,
  instanceDir = NULL,
  config = NULL,
  schema = NULL,
  dataDir = NULL,
  configSet = NULL,
  collection = NULL,
  shard = NULL,
  async = NULL,
  raw = FALSE,
  callopts = list(),
  ...
)
}
\arguments{
\item{conn}{A solrium connection object, see \link{SolrClient}}

\item{name}{(character) The name of the core to be created. Required}

\item{instanceDir}{(character) Path to instance directory}

\item{config}{(character) Path to config file}

\item{schema}{(character) Path to schema file}

\item{dataDir}{(character) Name of the data directory relative to
instanceDir.}

\item{configSet}{(character) Name of the configset to use for this core.
For more information, see
https://lucene.apache.org/solr/guide/6_6/config-sets.html}

\item{collection}{(character) The name of the collection to which this core
belongs. The default is the name of the \verb{core.collection.<param>=<value>}
causes a property of \verb{<param>=<value>} to be set if a new collection is being
created. Use \verb{collection.configName=<configname>} to point to the
configuration for a new collection.}

\item{shard}{(character) The shard id this core represents. Normally you
want to be auto-assigned a shard id.}

\item{async}{(character) Request ID to track this action which will be
processed asynchronously}

\item{raw}{(logical) If \code{TRUE}, returns raw data}

\item{callopts}{curl options passed on to \link[crul:HttpClient]{crul::HttpClient}}

\item{...}{You can pass in parameters like \code{property.name=value}    to set
core property name to value. See the section Defining core.properties for
details on supported properties and values.
(https://lucene.apache.org/solr/guide/6_6/defining-core-properties.html)}
}
\description{
Create a core
}
\examples{
\dontrun{
# start Solr with Schemaless mode via the schemaless eg:
#   bin/solr start -e schemaless
# you can create a new core like: bin/solr create -c corename
# where <corename> is the name for your core - or create as below

# connect
(conn <- SolrClient$new())

# Create a core
path <- "~/solr-8.2.0/server/solr/newcore/conf"
dir.create(path, recursive = TRUE)
files <- list.files("~/solr-8.2.0/server/solr/configsets/sample_techproducts_configs/conf/",
full.names = TRUE)
invisible(file.copy(files, path, recursive = TRUE))
conn$core_create(name = "newcore", instanceDir = "newcore",
  configSet = "sample_techproducts_configs")
}
}
