% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_swap.R
\name{core_swap}
\alias{core_swap}
\title{Swap a core}
\usage{
core_swap(name, other, async = NULL, raw = FALSE, callopts = list())
}
\arguments{
\item{name}{(character) The name of one of the cores to be swapped. Required}

\item{other}{(character) The name of one of the cores to be swapped. Required.}

\item{async}{(character) Request ID to track this action which will be processed
asynchronously}

\item{raw}{(logical) If \code{TRUE}, returns raw data}

\item{callopts}{curl options passed on to \code{\link[httr]{GET}}}
}
\description{
SWAP atomically swaps the names used to access two existing Solr cores.
This can be used to swap new content into production. The prior core remains
available and can be swapped back, if necessary. Each core will be known by
the name of the other, after the swap
}
\details{
Do not use \code{core_swap} with a SolrCloud node. It is not supported and
can result in the core being unusable. We'll try to stop you if you try.
}
\examples{
\dontrun{
# start Solr with Schemaless mode via the schemaless eg: bin/solr start -e schemaless
# you can create a new core like: bin/solr create -c corename
# where <corename> is the name for your core - or creaate as below

# connect
solr_connect()

# Swap a core
## First, create two cores
core_create("swapcoretest") # or create in the CLI: bin/solr create -c swapcoretest
core_create("swapcoretest") # or create in the CLI: bin/solr create -c swapcoretest

## check status
core_status("swapcoretest1", FALSE)
core_status("swapcoretest2", FALSE)

## swap core
core_swap("swapcoretest1", "swapcoretest2")

## check status again
core_status("swapcoretest1", FALSE)
core_status("swapcoretest2", FALSE)
}
}

